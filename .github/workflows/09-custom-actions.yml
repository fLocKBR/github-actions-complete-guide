name: 09 - Deployment
on:
  workflow_dispatch:
defaults:
  run:
    working-directory: 09-starting-project
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & Cache dependencies
        id: cache-deps
        uses: ./.github/actions/cache-deps
        with:
          project-path: 09-starting-project
          caching: 'false'
      - name: Output information
        run: |
          echo "Cache used? ${{  steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & Cache dependencies
        uses: ./.github/actions/cache-deps
        with:
          project-path: 09-starting-project
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load & Cache dependencies
        uses: ./.github/actions/cache-deps
        with:
          project-path: 09-starting-project
      - name: Build website
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: 09-starting-project/dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist
      - name: Output contents
        run: ls
      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-s3-javascript
        # uses: ./.github/actions/deploy-s3-docker
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket-name: ${{ secrets.AWS_BUCKET_NAME }}
          source-dir: ./dist
      - name: Output website URL
        run: |
          echo "Website URL: ${{ steps.deploy.outputs.website-url }}"