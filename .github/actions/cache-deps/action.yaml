name: Get & Cache Dependencies
description: Get dependencies and cache them for future runs
inputs:
  project-path:
    description: 'The path to the project'
    required: true
    default: '.'
  caching:
    description: 'Whether to cache dependencies or not'
    required: false
    default: 'true'
outputs:
  used-cache:
    description: 'Whether the cache was used or not'
    value: ${{ steps.install.outputs.cache }}
runs:
  using: 'composite'
  steps:
    - name: Cache dependencies
      if: ${{ inputs.caching == 'true' }}
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ inputs.project-path }}/node_modules
        key: deps-node-modules-${{ hashFiles(format('{0}/{1}', inputs.project-path, 'package-lock.json')) }}
    - name: Install dependencies
      if: ${{ steps.cache.outputs.cache-hit != 'true' || inputs.caching != 'true' }}
      id: install
      run: |
        npm ci
        echo "cache=${{ inputs.caching }}" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: ${{ inputs.project-path }}